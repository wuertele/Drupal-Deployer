<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function path_redirect_install() {
  drupal_install_schema('path_redirect');
}

/**
 * Implementation of hook_uninstall().
 */
function path_redirect_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('path_redirect');

  // Remove variables.
  variable_del('path_redirect_redirect_warning');
  variable_del('path_redirect_allow_bypass');
}

/**
 * Implementation of hook_schema().
 */
function path_redirect_schema() {
  $schema['path_redirect'] = array(
    'description' => 'Stores information on redirects.',
    'fields' => array(
      'rid'  => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique path redirect ID.',
      ),
      'path' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The source path to redirect from.',
      ),
      'redirect' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The destination path to redirect to.',
      ),
      'query' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The query string to send to the destination.',
      ),
      'fragment' => array(
        'type' => 'varchar',
        'length' => 50,
        'not null' => FALSE,
        'description' => 'An internal page anchor append to the destination.',
      ),
      'type' => array(
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'description' => 'The HTTP status code to use for the redirect.',
      ),
    ),
    'primary key' => array('rid'),
    'unique keys' => array('path' => array('path')),
  );
  return $schema;
}

/**
 * Allow longer values for path and redirect.
 */
function path_redirect_update_1() {
  $ret = array();

  db_change_field($ret, 'path_redirect', 'path', 'path',
    array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'description' => t('The source path to redirect from.'),
    )
  );
  db_change_field($ret, 'path_redirect', 'redirect', 'redirect',
    array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => TRUE,
      'description' => t('The destination path to redirect to.'),
    ),
    array('unique keys' => array('rid'))
  );

  return $ret;
}

/**
 * Convert the type column to an integer to only store the status code.
 */
function path_redirect_update_2() {
  $ret = array();

  // Convert string status messages to integer status codes.
  update_sql("UPDATE {path_redirect} SET type = '300' WHERE type = 'HTTP/1.0 300 Multiple Choices'");
  update_sql("UPDATE {path_redirect} SET type = '301' WHERE type = 'HTTP/1.0 301 Moved Permanently'");
  update_sql("UPDATE {path_redirect} SET type = '302' WHERE type = 'HTTP/1.0 302 Found'");
  update_sql("UPDATE {path_redirect} SET type = '303' WHERE type = 'HTTP/1.0 303 See Other'");
  update_sql("UPDATE {path_redirect} SET type = '304' WHERE type = 'HTTP/1.0 304 Not Modified'");
  update_sql("UPDATE {path_redirect} SET type = '305' WHERE type = 'HTTP/1.0 305 Use Proxy'");
  update_sql("UPDATE {path_redirect} SET type = '307' WHERE type = 'HTTP/1.0 307 Temporary Redirect'");

  // Convert the type column to store integers now that all values are converted.
  db_change_field($ret, 'path_redirect', 'type', 'type',
    array(
      'type' => 'int',
      'size' => 'small',
      'not null' => TRUE,
      'description' => t('The HTTP status code to use for the redirect.'),
    )
  );

  return $ret;
}

/**
 * Fix a type that could have caused the code 306 to be used mistakenly.
 */
function path_redirect_update_3() {
  $ret = array();
  $ret[] = update_sql("UPDATE {path_redirect} SET type = 307 WHERE type = 306");
  return $ret;
}

/**
 * Allow longer values for query strings fix the primary and unique keys.
 */
function path_redirect_update_4() {
  $ret = array();

  // Allow longer query strings.
  db_change_field($ret, 'path_redirect', 'query', 'query',
    array(
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
      'description' => t('The query string to send to the destination.'),
    )
  );

  // Change the primary key from path to rid and add a unique key on path.
  db_drop_primary_key($ret, 'path_redirect');
  db_drop_unique_key($ret, 'path_redirect', 'rid');
  db_add_primary_key($ret, 'path_redirect', array('rid'));
  db_add_unique_key($ret, 'path_redirect', 'path', array('path'));

  return $ret;
}

